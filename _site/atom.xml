<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>南琦的博客</title>
 <link href="http://nanqi.github.com/atom.xml" rel="self"/>
 <link href="http://nanqi.github.com"/>
 <updated>2013-01-03T13:20:07+00:00</updated>
 <id>http://nanqi.github.com</id>
 <author>
   <name>NanQi</name>
   <email>luyu_1216@126.com</email>
 </author>

 
 <entry>
   <title>《黑客与画家》读书笔记 第六章</title>
   <link href="http://nanqi.github.com/blog/2012/12/31/hackers-and-painters-6"/>
   <updated>2012-12-31T00:00:00+00:00</updated>
   <id>http://nanqi.github.com/blog/2012/12/31/hackers-and-painters-6</id>
   <content type="html">&lt;p&gt;前几章之所以没有记录，是因为这是自己这里的第一篇读书笔记。&lt;br/&gt;
前几章其实也有不少值得记录的，这里就随便说几句。比如说黑客与画家时，说到数学家，其中说：&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;科学界的每一个人，暗地里都相信数学家比自己聪明。(P22)&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;然后说黑客应该认识到自己与其他创作者——比如作家和画家——是一类人。&lt;br/&gt;
至少我就经常出现这种情况——自以为自己在做数学，其中多少有点装逼的成分。&lt;br/&gt;
然后讲了不少互联网应用和本地应用，不止一次的提及——&lt;code&gt;如果能做出一个不是那么糟糕的浏览器&lt;/code&gt;，则怎么怎么。&lt;br/&gt;
如果作者敏锐的眼光已经给我等指定了一条明路，那么我们唯一缺少的就是做出来的能力了。&lt;/p&gt;

&lt;p&gt;上面几句都是一些回忆，随便翻翻，随便写写，书看到第六章，要说的也是第六章。&lt;/p&gt;

&lt;h2&gt;如何创造财富&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;纵观第六章，或许给我们讲的不是计算机科学，作者以史论事，给我上了一堂&lt;code&gt;经济学&lt;/code&gt;。&lt;br/&gt;
说金钱不等于财富，讲&lt;code&gt;大饼谬论&lt;/code&gt;，说程序员是目前存在的最大的手工艺人，应该最明白财富是被创造出来的。&lt;br/&gt;
或许我就是他讲述中的大多数人，至少我从某方面有过这种认为。而接下来基本就将命题引入本书的关键——创业。&lt;/p&gt;

&lt;p&gt;首先告诉你，你在公司里当程序员为什么比销售人员拿的钱少：&lt;br/&gt;
因为大公司无法准确的测量每个员工的贡献，销售人员容易测量，而程序员，你即使很努力的工作，感觉为公司带来了很高的利润，但是这可能是因为设计师为它设计一个漂亮的外壳，营销人员让顾客相信这是值得拥有的商品，也可能是上一代产品的工作人员为这个公司树立了质量可靠的形象……&lt;/p&gt;

&lt;p&gt;然后告诉你：&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;要致富，你需要两样东西：可测量性和可放大性。你的职位产生的业绩，应该是可测量的，否则你做的再多，也不会得到更多的报酬。此外，你还必须可放大性，也就是说你做出的决定能够产生巨大的效应。&lt;/p&gt;&lt;/blockquote&gt;

&lt;p&gt;这时就告诉你，小团队等于可测量性，高科技等于可放大性，当两个做一个&amp;amp;&amp;amp;运算时，你就会发现，互联网创业最直接，成功率最高。（当然，现在包括了移动APP）&lt;br/&gt;
然后给你说创业公司最好的下场就是被收购，而如何能让公司被收购呢，作者的答案就是用户数量。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>从LINQ的Count方法说起-3</title>
   <link href="http://nanqi.github.com/blog/2012/12/23/linq-count-3"/>
   <updated>2012-12-23T00:00:00+00:00</updated>
   <id>http://nanqi.github.com/blog/2012/12/23/linq-count-3</id>
   <content type="html">&lt;p&gt;前两篇博客导航：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;/blog/2012/12/20/linq-count-1/&quot;&gt;从LINQ的Count方法说起-1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;/blog/2012/12/22/linq-count-2/&quot;&gt;从LINQ的Count方法说起-2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;舒尔特方格&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;话说我曾经弄过WP应用，做了个很简单的一个游戏——&lt;a href=&quot;http://baike.baidu.com/view/2450431.htm&quot;&gt;舒尔特方格&lt;/a&gt;：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/image/SchulteGrid1.png&quot; alt=&quot;舒尔特方格1&quot; /&gt;
&lt;img src=&quot;/image/SchulteGrid2.png&quot; alt=&quot;舒尔特方格2&quot; /&gt;&lt;/p&gt;

&lt;p&gt;（由于我实在找不到原图了，只能拿这个有水印的图片）
我要说的不是这个游戏，而是一个简单的不能再简单的问题——&lt;strong&gt;如何把25各数字随机排列在方格中&lt;/strong&gt;&lt;br/&gt;
我曾写过的一个实现方式：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;List&amp;lt;int&amp;gt; lst = new List&amp;lt;int&amp;gt;();

for (int i = 1; i &amp;lt;= 25; i++)
{
    lst.Add(i);
}

foreach (Button btn in Schulte_Grid.Children)
{
    btn.Content = lst[ran.Next(lst.Count)].ToString();
    lst.Remove(index);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当然，我现在找到更合适的方法：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;List&amp;lt;int&amp;gt; lst = Enumerable.Range(1, 25).OrderBy(i =&amp;gt; Guid.NewGuid()).ToList();
Button btn;
for (int i = 0; i &amp;lt; Schulte_Grid.Children.Count; i++)
{
    btn = Schulte_Grid.Children[i];
    btn.Content = lst[i].ToString();
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;关于OrderBy&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;我在想，这个问题中，我从思想上就已经错了。&lt;br/&gt;
我一直在想，如何从一个集合中随机取出，而不是想着如何把一个集合随机排列，然后依次取出。&lt;br/&gt;
关于OrderBy方法，某些人不理解为什么返回值是一个泛型，也就是说返回什么都可以，所以经常见到的写法是：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;lst.OrderBy(i =&amp;gt; i);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;关于排序问题，必然涉及比较器，请参见&lt;a href=&quot;/blog/2012/11/22/winform/#ListViewSort&quot;&gt;关于ListView排序的众多问题&lt;/a&gt;，这里就不再啰嗦了。&lt;/p&gt;

&lt;p&gt;OrderBy本来是没什么好说的，但是如果用TSQL或查询表达式来想，如果对多字段排序应该怎么写？如果是降序排列呢？&lt;br/&gt;
如果你试着想从OrderBy中实现这些，不是不行，不是说了有比较器么，但是这就又犯了&lt;code&gt;在一棵树上吊死&lt;/code&gt;的错误了。&lt;br/&gt;
在LINQ方法中，对于多字段排序有&lt;code&gt;ThenBy&lt;/code&gt;方法，对于降序排序有&lt;code&gt;OrderByDescending&lt;/code&gt;，对于降序多字段排序有&lt;code&gt;ThenByDescending&lt;/code&gt;。&lt;br/&gt;
这就让人思考，为什么不在OrderBy方法中多传几个参数，或多加几个重载（在4.0中甚至可以使用可选参数）达到效果，而要写这么多不同的方法呢？&lt;/p&gt;

&lt;p&gt;这些缘由很多，我怕我说不到位，说的不对，这里也就不说了，能给大家带来一些思考就已经达到我要的目的了。&lt;br/&gt;
是想如果当年我写下那段舒尔特方格的代码，如果觉得写的很对，没有问题，这就是最好的写法，那么也就不会有当我看到随机排序时的恍然大悟。&lt;br/&gt;
带着问题去学习，向来都是最高效的。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>从LINQ的Count方法说起-2</title>
   <link href="http://nanqi.github.com/blog/2012/12/22/linq-count-2"/>
   <updated>2012-12-22T00:00:00+00:00</updated>
   <id>http://nanqi.github.com/blog/2012/12/22/linq-count-2</id>
   <content type="html">&lt;p&gt;话说我&lt;a href=&quot;/blog/2012/12/20/linq-count-1/&quot;&gt;上一篇博客&lt;/a&gt;说着说着说跑题了，想想干脆就写个连载得了，介绍一下使用LINQ中的一些问题。&lt;/p&gt;

&lt;h2&gt;SkipWhile为什么跳不过空行&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;某人想从一个字符串集合中筛选掉空行，结果写了这么一句（模拟）：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;string[] lst = { &quot;\r\n&quot;, &quot;\r\n1&quot;, &quot;\r\n2&quot;, &quot;\r\n3&quot; };
var v = lst.SkipWhile(str =&amp;gt; str.Trim() == &quot;\r\n&quot;).ToList();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;好了，然后他问我，为什么SkipWhile跳不过空行。&lt;br/&gt;
以上是我模拟他的问题，实际上他是从一个文件中读出来所有文本，然后来了个Split（使用string[] separator，他知道用StringSplitOptions.RemoveEmptyEntries），数据大概就是这个样子，第一个数据是\r\n，他调试主要看运行完代码第一个还在不在。&lt;br/&gt;
我理解他是想将集合中为空的数据筛选掉，但是写成这样实在让我惊讶，他至少有以下几个问题：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;不知道Trim方法会移除回车&lt;/li&gt;
&lt;li&gt;以为换行符都是\r\n&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;不理解SkipWhile&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;


&lt;p&gt;如果说第一个是因为粗心，第二个觉得没必要，那么第三个就没有解释的理由了。&lt;br/&gt;
首先如果数据确定的情况下，把上面方法内的lambda表达式换成这样：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var v = lst.SkipWhile(str =&amp;gt; string.IsNullOrEmpty(str.Trim())).ToList();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;结果是他想要的，但这就是正确的么？&lt;br/&gt;
如果把数据换成这样呢：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;string[] lst = { &quot;\r\n1&quot;, &quot;\r\n&quot;, &quot;\r\n2&quot;, &quot;\r\n3&quot; };
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我想他可能把SkipWhile理解的要遍历每个元素，如果满足条件，则跳过。那么我就想问，如果真是这样，和Where有什么区别？&lt;/p&gt;

&lt;p&gt;至于没有考虑从读文本时做此操作，和一次把文件中的内容全读过来可能带来的风险这里就不说了。&lt;/p&gt;

&lt;h2&gt;Any和All&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;有时候我们会判断一个集合中是否有满足条件的值，比如说对于下面的数据：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Random ran = new Random();
int[] arr = new int[10];
for (int i = 0; i &amp;lt; arr.Length; i++)
{
    arr[i] = ran.Next(100);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;要判断生成的数组中是否有小于10的数，在LINQ之前，基本都是这样做：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bool flg = false;
foreach (var item in arr)
{
    if (item &amp;lt; 10)
    {
        flg = true;
        break;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;而某人使用LINQ以后，写下了这样一个：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;flg = arr.Where(i =&amp;gt; i &amp;lt;= 10).Count() &amp;gt; 0;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;（大家对于&lt;code&gt;=&amp;gt;i&amp;lt;=&lt;/code&gt;是不是觉得挺有意思的）&lt;br/&gt;
当然，他肯定不知道LINQ中有Any这个方法：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;flg = arr.Any(i =&amp;gt; i &amp;lt;= 10);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;而All与Any“相反”，可以判断数组中的值是否都小于10。&lt;/p&gt;

&lt;p&gt;好了，先说到这里，下篇介绍Group By。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>从LINQ的Count方法说起-1</title>
   <link href="http://nanqi.github.com/blog/2012/12/20/linq-count-1"/>
   <updated>2012-12-20T00:00:00+00:00</updated>
   <id>http://nanqi.github.com/blog/2012/12/20/linq-count-1</id>
   <content type="html">&lt;h2&gt;几句闲扯&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;在我学习LINQ时，确实感觉很爽。&lt;br/&gt;
但是时间久了，慢慢也就不那么在意了。但是周围朋友总是记得&lt;code&gt;我会使用LINQ&lt;/code&gt;编程。&lt;br/&gt;
记得初中时候学几何，有一个已知三角形边长求面积的题，而我正巧知道&lt;a href=&quot;http://baike.baidu.com/view/1279.htm&quot;&gt;海伦公式&lt;/a&gt;，之后凡是碰到可以使用此公式的题，同学都想起我会做，仿佛那公式应该以我的名字命名一样……&lt;br/&gt;
某人问我有没有学习LINQ的资料，我实在说不出，因为我从来都没有系统的去学过LINQ。我基本只是使用几个IEnumerable&lt;T&gt;的扩展方法，要说学习也只是从某些第X版书中读过几句，平时也就在一个集合点一下然后看看各自说明。&lt;br/&gt;
当然，LINQ不止于此，我也说不出到底LINQ都包含什么，什么是LINQ。&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;给一个东西，一门技术下定义，从来都不是一件简单的事。&lt;/p&gt;&lt;/blockquote&gt;

&lt;h2&gt;事出有因&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;事情是这样的，今天有人问我一个小问题，关于LINQ，然后我不经意间看到一行代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;int count = lst.Where(ch =&amp;gt; char.IsNumber(ch)).Count();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;代码读起来很简单，就是从一个char集合里找出为数字的个数。&lt;br/&gt;
代码没问题，但是还有个更好的写法：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;int count = lst.Count(char.IsNumber);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;即便他不知道Count方法可以传参，那么他为什么不写成：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;int count = lst.Where(char.IsNumber).Count();
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;我相信他根本就不知道这里为什么要写ch =&gt; char.IsNumber(ch)，根本就不知道这里需要的是一个方法。&lt;br/&gt;
这让我想起一个男同事说一个女同事（所谓同事，都是程序猿），女的刚毕业，不怎么会，然后男的说女的写代码ToString不带括号。&lt;br/&gt;
这姑且说是这个女同事不知道调用方法即使没有参数也需要带括号，或者说她根本就不知道ToString是一个方法，但是同样也说明这个男同事以为方法只能去调用（call）。&lt;br/&gt;
或许简单下面的代码他会觉得很惊讶：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;string[] arr = lst.Where(char.IsNumber).Select(char.ToString);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;又或者在事件上：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;delegate string GetNumberDelegate(char ch);
event GetNumberDelegate GetNumberEvent;
...
this.GetNumberEvent += char.ToString;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;几点思考&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;我想大多数人习惯于使用ch =&gt; char.IsNumber(ch)是因为这样感觉很好理解，程序可以&lt;code&gt;读出来&lt;/code&gt;。是的，写LINQ最爽的一点就是这里了。&lt;br/&gt;
比如说使用Where方法，知道集合是一个char集合，那么ch很自然的可以当做char集合中每个元素，=&gt;之后写下对每个元素的判断，很好理解，用起来很舒服。&lt;br/&gt;
但是切莫执迷于表像而偏离本质。&lt;br/&gt;
说起函数当做参数传递，记起曾经在封装一个日历控件的时候遇到一个问题：需要在已提交报表、未提交报表和还没到的日子分颜色：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/image/ucCalendar.gif&quot; alt=&quot;日历控件&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但是关于颜色问题，修改了好多次，最后干脆我给封装的控件增加一个Func&amp;lt;string, Color&gt;，根据给定的类型（提交或未提交）去给定颜色。&lt;br/&gt;
最后我要说的是我本来初衷不是写好多人不知道&lt;code&gt;函数也是一个对象&lt;/code&gt;，不知道函数也可以去传递，但是写一下给写跑题了，干脆就继续写下去。而原本我是想说说几个LINQ扩展方法的先后问题，留在下一篇博客中说吧。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>其实根本不用混淆你的代码</title>
   <link href="http://nanqi.github.com/blog/2012/12/16/unmain"/>
   <updated>2012-12-16T00:00:00+00:00</updated>
   <id>http://nanqi.github.com/blog/2012/12/16/unmain</id>
   <content type="html">&lt;p&gt;酷壳中有不少有意思的文章，看起来很带劲。本来要说大多看看则了，现在终于要学以致用了。&lt;br/&gt;
本人最近接手一个项目，缝缝补补几天下来，实在有点郁闷，但是想想，自己也强不到哪里去。正如下所说：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;If builders built buildings the way programmers write programs, then the first woodpecker that came along would destroy civilization.（如果建筑师盖房子就像程序员写程序一样，那么，第一只到来的啄木鸟就能毁掉我们的文明）
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href=&quot;http://coolshell.cn/articles/4758.html&quot;&gt;如何写出无法维护的代码&lt;/a&gt;&lt;br/&gt;
其实好代码很多，开源的很多，但是往往都是代码太多，功能太强大，而不知道从何处看起。所以，其实根本不用混淆你的代码。&lt;br/&gt;
本文针对此次项目，结合以往所学所看，谈谈对代码可读性方面的认识。&lt;/p&gt;

&lt;h2&gt;程序命名&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;有一篇文章说&lt;a href=&quot;http://kb.cnblogs.com/page/153129/&quot;&gt;史上最糟糕的两个变量名&lt;/a&gt;：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;data&lt;/li&gt;
&lt;li&gt;data2&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;仅就个人而言，并不是很反感变量名的无意义。如a1，a2，b3，b4等变量命名，如str（本人就经常使用），tmp，dt等都与data与data2所说一致，其实想想有时候使用同一种相互&lt;code&gt;不约而同&lt;/code&gt;的命名方式有何不可，即使这是一种错误的命名方式。&lt;br/&gt;
好比看到str，我知道他是一个字符串，知道他是一个局部变量（local），而不可能是一个字段（field），对于str，我打起来很快很熟练，可能我只是在十几行的方法中使用，这种命名有何不可。&lt;br/&gt;
但是还有一种人很有意思，他们不写这种简单的变量名，往往会这样去声明一个变量：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;private DeserializeDockContent m_DeserializeDockContent;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;或许他们实在不知道给这个字段起什么名字，但是又不能让变量名&lt;code&gt;毫无意义&lt;/code&gt;，所以他们一般会将整个类名写出来，好让人看到变量就知道他是什么类型。&lt;br/&gt;
相同的，他们会觉得遵守了&lt;a href=&quot;http://baike.baidu.com/view/419474.htm&quot;&gt;匈牙利命名法&lt;/a&gt;而自豪，如果是局部变量更简单：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;ComponentAssembly componentAssembly = new Componentassembly(&quot;XXX&quot;);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;文中所谈使用下划线为变量名，让我想起了一门超牛逼的编程语言：&lt;a href=&quot;http://zh.wikipedia.org/wiki/Brainfuck&quot;&gt;Brainfuck&lt;/a&gt;，很难见的只有八种运算符的语言，有兴趣的可以看看。&lt;/p&gt;

&lt;h2&gt;伪装欺诈&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;看到这一节的第一个程序让我真实感觉到了牛人的&lt;code&gt;创造力&lt;/code&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;for(j=0; j&amp;lt;array_len; j+=8)
{
    total += array[j+0];
    total += array[j+1];
    total += array[j+2]; /* Main body of
    total += array[j+3];  * loop is unrolled
    total += array[j+4];  * for greater speed.
    total += array[j+5];  */
    total += array[j+6];
    total += array[j+7];
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;至于伪装欺诈，我想很多程序员也不至于去干如此有&lt;code&gt;技术含量&lt;/code&gt;的事，但是不排除一些看到如下代码的程序员会做出如何疯狂的事情：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;case &quot;btnModify&quot;:
    mySql.Append(&quot;update mdm_attr set mdm_code='&quot; + txtMdmCode.Text + &quot;',mdm_name='&quot; + txtName.Text + &quot;',&quot;);
    mySql.Append(&quot;mdm_type='&quot; + GetMdmType() + &quot;',ac_num_ind='&quot; + GetAcnumind() + &quot;',draw_uncon_yn='&quot; + GetDrawuncon() + &quot;',&quot;);
    mySql.Append(&quot;qry_pwd_yn='&quot; + GetQrypwd() + &quot;',draw_pwd_yn='&quot; + GetDrawpwd() + &quot;',draw_id_yn='&quot; + GetDrawid() + &quot;',&quot;);
    mySql.Append(&quot;draw_seal_yn='&quot; + GetDrawseal() + &quot;',pwd_mach_yn='&quot; + GetPwdmach() + &quot;', note_type = '&quot; + txtNotetype.Text + &quot;',only_ind='&quot; + GetOnlyind() + &quot;',&quot;);
    mySql.Append(&quot; pg_num=&quot; + pgnum + &quot;, pg_line=&quot; + pgline + &quot;,no_ind='&quot; + GetNoind() + &quot;',prt_ind='&quot; + GetPrtind() + &quot;',&quot;);
    mySql.Append(&quot; card_type='&quot; + GetCardType() + &quot;',card_ind='&quot; + GetCardInd() + &quot;',chg_flag='&quot; + GetChgFlag() + &quot;',&quot;);
    mySql.Append(&quot; fee_knd='&quot; + GetFeeKnd() + &quot;',min_amt=&quot; + min_amt + &quot;,fee_code='&quot; +
    txtfeecode.Text.Trim() + &quot;',&quot;);
    mySql.Append(&quot; cif_type='&quot; + GetCifType() + &quot;',opn_aff_yn='&quot; +
    GetOpnaFf() + &quot;',&quot;);
    mySql.Append(&quot;opn_sub_cnt=&quot; + opn_sub_cnt + &quot;,opr_aff_yn='&quot; + GetOpraFf() + &quot;',&quot;);
    mySql.Append(&quot;dz_flag='&quot; + GetDzFlag() + &quot;',beg_date=&quot; + beg_date + &quot;, end_date=&quot; + end_date + &quot;,&quot;);
    mySql.Append(&quot; opn_cnt=&quot; + opn_cnt + &quot;,sts='&quot; + GetSts() + &quot;',filler='&quot; +
    txtfiller.Text.Trim() + &quot;' &quot;);
    mySql.Append(&quot; where mdm_code ='&quot; + txtMdmCode.Text.Trim().ToString() + &quot;'&quot;);
break;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;文档和注释&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;我一直都是一个不喜欢写注释的人。&lt;br/&gt;
在我的开发环境中将注释的颜色尽可能的变暗，以至于我粗略一看可以忽略他。因为很多注释真的是毫无意义。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xDoc.Save(savePath);
//filestream 读取XML文件
XmlDocument _xd = new XmlDocument();
_xd.Load(savePath);
//用byte类型接收XML文件
byte[] myByte = Encoding.UTF8.GetBytes(_xd.InnerXml);
//上传到服务器，成功后提示
if (TradeHelper.TradeUtils.SaveClientConfFile(&quot;Menu.xml&quot;, myByte, false))
{ this.ShowMessageBox(&quot;提交成功&quot;, &quot;系统提示&quot;); }
//获取Menu.xml的路径
string menuPath = Directory.GetCurrentDirectory() + &quot;\\Menu.xml&quot;;
//读取Menu.xml的内容
XmlDocument xd_menu = new XmlDocument();
xd_menu.Load(menuPath);
//读取Menu_Tmp.xml 的内容
XmlDocument xd_tmp = new XmlDocument();
xd_tmp.Load(savePath);
//两个文件内容交换(让Menu.xml 内容替换)
xd_menu.InnerXml = xd_tmp.InnerXml;
//保存Menu.xml
xd_menu.Save(menuPath);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;拿到一份100行的代码，你会发现可能注释会有50行，这将是怎么一种感觉？很多时候，我认为文档比注释更重要，如果公司的每个项目都有相应的一些必要文档，我想开发人员也没有那么累了。&lt;br/&gt;
可有人干过专门补注释的事情？&lt;br/&gt;
由于某种原因，代码可能要有某种形式的验收，这时候就有个要求，注释不能少于代码量的1/3，好吧，我绞尽脑汁的去补注释，有时候不得已就要使出小学应付作文字数的方式：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/// &amp;lt;summary&amp;gt;
/// 获取HtmlElement 可以根据ID、Name、TagName等组合
/// ID选择器优先级最高
/// Name选择器如果能获得且只有一个，直接返回，不判断其他
/// 其他选择器取并集 使用其他选择器最好指定Name或TagName
/// &amp;lt;/summary&amp;gt;
HtmlElement GetElement(XmlNode item)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;其实我更想写的是思路。&lt;/p&gt;

&lt;h2&gt;程序设计&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;关于XML的配置，很不幸的是我手头有个项目基本就完全符合这种情况。而我们也确实曾经使用webservice来访问数据库，在数据库中存过XML字段等等，XML很强大。&lt;br/&gt;
我很讨厌诸如此种重构方法的方式：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/image/unmain/unmain_RefreshToolBox.png&quot; alt=&quot;刷新工具箱&quot; /&gt;&lt;/p&gt;

&lt;p&gt;更恐怖的是除了RefreshToolBox还有RefreshToolBox1、RefreshToolBox2……&lt;br/&gt;
虽然我也喜欢在代码中写&lt;code&gt;Hard-coded&lt;/code&gt;或者说&lt;code&gt;Magic Number&lt;/code&gt;，但是我真的很排斥用数字作为状态码或着说标示符去重构方法。&lt;br/&gt;
如果你看到如下代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;total2 = total - 45;
if(flg == 1)
{
    //...
}
if(total2 &amp;gt; total3)
{
    //...
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;还值得一说的就是过度的面向对象设计。&lt;br/&gt;
我至今还是不能把GOF23种设计模式说全，但是不影响我干任何事情。对设计模式的批判仿佛比设计模式的重要性还要多，而面向对象是否是一个骗局，是否符合哲学，我无法去辩驳，因为我真不怎么懂面向对象。&lt;br/&gt;
我只是在项目中看到，由于面向对象的设计，无故的多出了很多代码。往往是我看到这里，跳着跳着已经忘记了初衷。&lt;br/&gt;
某篇文章说程序员应该克制写代码的冲动，而多多思考，但是正因为这种思想的影响，往往让我很难下手。&lt;br/&gt;
这会让我写代码越来越慢。&lt;/p&gt;

&lt;p&gt;因为我总是会考虑很多才会下手：如何写才能有利于扩展，如何写代码才会更好看，如何写才会减少不必要的bug……以前的我是不会考虑这么多的，一旦想清楚怎么样才能实现功能之后，我就会毫不犹豫的敲出代码，而我现在连一个变量该如何命名都会考虑很久。其实对于这种项目来说，有些考虑确实是不必要的，程序设计的再好，再有利于扩展，也很有可能无法满足一次需求的变动。&lt;/p&gt;

&lt;p&gt;以上是某人的感言，很符合我现在的情况。&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;好了，写了许多，就不再写下去了。不管代码如何，总还是要有人去维护的，每一个程序员都有把代码写烂的天分，看一份源码，有时候真可以了解一个人。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>软件功能是不是越多越好</title>
   <link href="http://nanqi.github.com/blog/2012/12/11/features"/>
   <updated>2012-12-11T00:00:00+00:00</updated>
   <id>http://nanqi.github.com/blog/2012/12/11/features</id>
   <content type="html">&lt;p&gt;软件业流传有这么一句话：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;有两种方式构建软件设计：一种是把软件做得很简单以至于明显找不到缺陷；另一种是把它做得很复杂以至于找不到明显的缺陷。
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最近接手一个项目。软件是一个开发工具，类似VS那种的可视化开发。&lt;br/&gt;
原来的软件使用了&lt;code&gt;Interop.SourceSafeTypeLib.dll&lt;/code&gt;用VSS进行版本控制，后来众多因素，版本控制的功能也就去掉了，增加一个FTP功能。&lt;br/&gt;
中间接手的项目肯定会有各种各样的问题，但是FTP这个功能基本是一个全新的且独立的（自主性非常高，完全可以废弃曾经做的），不存在阅读他人代码的问题。&lt;br/&gt;
需求给的很简单：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;FTP上传，下载功能要求实现服务器文件和本地文件的同步，上传是将本地文件同步到服务器（Commit），下载是将服务器上文件同步到本地(Update),上传和下载时需要进行判断，当前两面文件是否一致，初步计划以文件大小或者更新时间为依据。
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;开发时遇到的一些问题&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;页面布局简直信手拈来：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/image/features/features_main.png&quot; alt=&quot;FTP主界面&quot; /&gt;&lt;/p&gt;

&lt;p&gt;但是做了两天，发现需求无法确定软件功能，而软件功能究竟要做多少才是&lt;code&gt;够用&lt;/code&gt;？&lt;br/&gt;
由于受&lt;a href=&quot;http://xbeta.info/tc/&quot;&gt;total commander&lt;/a&gt;的影响，对于这种左边一个目录，右边一个目录感觉很“顺眼。但是做起来却是问题多多。&lt;br/&gt;
比如&lt;a href=&quot;/blog/2012/11/22/winform/#ListViewSort&quot;&gt;ListView的排序问题&lt;/a&gt;，从外部给当前目录增加文件、删除文件后的刷新问题，Unix文件格式和Windows文件格式问题，下载、上传时文件重名的覆盖、跳过、重命名问题……&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/image/features/features_FileExist.png&quot; alt=&quot;覆盖跳过重命名&quot; /&gt;&lt;/p&gt;

&lt;p&gt;尤其在做重命名时，发现远远没有自己想的那么简单。&lt;br/&gt;
这些功能，要说都是很基本的一些，文件操作天天都在用，但是做起来远远没有自己想的那么容易。&lt;/p&gt;

&lt;h2&gt;功能到底要做多少&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;一个FTP的上传、下载功能而已，有那么难么？&lt;/p&gt;

&lt;p&gt;是的，不难。&lt;br/&gt;
先不说类库中专门有针对FTP的封装，相信即使直接使用FTP命令做到“能上传”、“能下载”都很简单。但一个软件光做到“能”还是远远不够的。&lt;br/&gt;
我在软件开发时，不止一次的想：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;这个功能做不做？

FTP代理（防火墙）做不做？  
FTP保持连接（发送虚包）做不做？  
文件差异高亮显示功能做不做？  
支持不支持上传下载目录？  
……
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;某人曾经说我：你这是自己给自己找需求。&lt;br/&gt;
试想在需求如此空泛的情况下，我能不自己给自己找需求么？&lt;/p&gt;

&lt;p&gt;本来软件做了一个FTP的上传功能，对于当前编辑的文件，选择菜单中的上传，自动上传当前文件到设置的默认FTP服务器，如果服务器上已经有同名文件，进行提示。&lt;br/&gt;
要说这个功能也就够了，能满足所谓的“需求”。&lt;/p&gt;

&lt;h2&gt;功能是不是越多越好&lt;/h2&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code&gt;把这个功能做上，即使用不到先放在那里。  
这个是锦上添花的功能，做了更好。  
时间充足的情况下，这个功能还是做上。  
……
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;正如本文开始所说，软件越复杂，缺陷、问题越多。&lt;br/&gt;
功能不是越多越好，功能不是想到了用不到加上无所谓。&lt;br/&gt;
每增加一个功能，要考虑对这个影响不影响，对那个影响不影响，要进行多少测试才可以，怎能是随便就能增加？&lt;br/&gt;
要说功能应该在软件设计前期确定下来，但我经历的几个公司，只有粗略的计划，而没有详细的设计，只是说这个软件“能干什么干什么”，完全一副行外人的感觉。就好比我告诉你QQ能聊天，IE能浏览网页……&lt;br/&gt;
当然，我总是在批评，但是真正让我开始做还是一样。&lt;br/&gt;
大概去年，我完全负责一个小软件开发，我一直告诉自己，设计、设计，但是还是软件开始没三天就开始进行编码……&lt;/p&gt;

&lt;h2&gt;写在后面&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;软件开发真所谓一个复杂而漫长的学习旅途。&lt;br/&gt;
我越来越觉得曾经在小公司市老板做法很对：&lt;br/&gt;
项目还没确定下来，就让我们先做出一个软件出来，投标的时候，其他功能介绍自己的软件有什么什么功能，能达到什么什么目的，而我们直接给客户演示……
告诉我们，客户本来是没有需求的，但是当你给他软件的时候他就有需求了。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>我现在所使用的软件清单</title>
   <link href="http://nanqi.github.com/blog/2012/12/05/software"/>
   <updated>2012-12-05T00:00:00+00:00</updated>
   <id>http://nanqi.github.com/blog/2012/12/05/software</id>
   <content type="html">&lt;p&gt;今天和某人说起学习流程，顺便整理一下自己现在所使用的软件。&lt;br/&gt;
网上有个人起的名字很好：&lt;a href=&quot;http://xbeta.info/&quot;&gt;善用佳软&lt;/a&gt;，里面有不少很有用的东西，对我的影响还是挺大的（这里要说明一下，我是一个十分容易受影响的人）。&lt;br/&gt;
&lt;em&gt;以下软件，有些程序员专用，很多东西所有人都应该知道&lt;/em&gt;&lt;/p&gt;

&lt;h2&gt;操作系统&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Windows XP&lt;/li&gt;
&lt;li&gt;&lt;em&gt;cygwin&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;Windows 7&lt;/li&gt;
&lt;li&gt;Ubuntu 12.4&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;对于操作系统，我安装了三个多系统，其实Win7和Ubuntu都不常用。
我知道cygwin不是操作系统。&lt;br/&gt;
我现在对于cygwin的依赖已经很高。像我这种弄什么东西就弄一点点，不想深入研究的，cygwin简直比所有linux系统都适合我。&lt;br/&gt;
装Win7最早是因为要做WP开发，但是最后太懒，连环境都没有安装，最后给Win7的定位是娱乐、网上购物、网银的时候使用，但是有时候还是闲切换麻烦直接在XP里面操作了。&lt;br/&gt;
对于Ubuntu，刚开始还是满怀信心的，每天晚上几点到几点就开始使用Ubuntu，上网、学习之类的，但是自从使用cygwin以后，Ubuntu开的是越来越少了。&lt;br/&gt;
XP几百天后过期，可能会改变我操作系统的使用。到时候我可能会尝试一下&lt;a href=&quot;https://www.archlinux.org/&quot;&gt;Arch&lt;/a&gt;，由于从事的都是Windows开发，Windows肯定还是需要一个，至于是使用7还是8或者9那就是后话了。&lt;/p&gt;

&lt;h2&gt;浏览器&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Chrome&lt;/li&gt;
&lt;li&gt;Firefox&lt;/li&gt;
&lt;li&gt;IE 8&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;浏览器方面，不知道从什么时候开始使用Chrome，就一直使用他，收藏夹也主要使用的Chrome的，其他的都没有整理收藏夹。&lt;br/&gt;
Chrome真的很好用，现在越来越多的网站兼容性方面都可以了。&lt;br/&gt;
Firefox在Ubuntu中使用。曾经也折腾过一段时间的FF，但是由于高度的定制化，可扩展性，折腾起来太费劲，最后还是放弃了，在Ubuntu中也安装了Chrome，但是一般还是使用FF浏览。插件方面，比如firebug，KeySnail之类，但是都很少用，也没有过多折腾，这里就不做任何推荐了。&lt;br/&gt;
至于IE，现在是越来越少用了。在系统中默认浏览器也换成了Chrome，对于一些Chrome无法打开的，还有就是偶尔要看看多浏览器支持问题的时候，启动一下IE。&lt;/p&gt;

&lt;h2&gt;文本编辑器&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Vim&lt;/li&gt;
&lt;li&gt;Emacs&lt;/li&gt;
&lt;li&gt;Notepad&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;对于Vim和Emacs我就不多说什么了。&lt;br/&gt;
上面也说过，我是一个比较受人影响的人。关于神的编辑器和编辑器之神，我不想去争论谁更好，我也不和IDE使用者去理论，因为我同时还是在使用IDE。&lt;br/&gt;
但是我真的要说。不管是谁，程序员与否无关。Vim确实应该学习。&lt;br/&gt;
我当初致力使用Emacs，但是由于Windows下的Emacs的众多问题，我一段时间使用Vim（Windows下，Vim显然比Emacs更自然），当然也与工作有关，工作服务器都是AIX，编辑器基本都是使用vi，所以我越来越多的功夫还是花在Vim上。&lt;br/&gt;
但是自从我使用cygwin，又重拾Emacs。在cygwin中，Emacs确实也还还存在不少问题（比如我上面使用C-@就无法Mark-set，我只能使用ESC-@代替，而且后来ESC-@也有问题……），但是使用Emacs感觉更顺畅，使用Vim主要不习惯目录管理。在Emacs中安装某插件（我确实不知道是什么插件，我使用的是某位牛人的配置）打开文件很轻松，有时基本就是几下回车的问题。还有就是Emacs中的eshell、w3m等都是很好的东西。&lt;br/&gt;
没错。我还使用Notepad。就是windows自带的那个Notepad。主要的几个用途是由于文件编码格式（fileencoding）或者文件格式（fileformat）的问题，我基本现在用Vim编辑以后，都要用Notepad看看格式是否正确，一些Vim打开是乱码的（不知道什么问题，比如说多个&lt;sup&gt;@的问题，我就很晕，也不是编码问题），就使用Notepad了。说起Notepad，我前一阵子还是用了一个功能。长治商行有个系统，屏蔽了右键，我一般的做法就是在浏览器上`view-source:&lt;/sup&gt; + 网址`去查看源代码，那次直接使用了Vim没打开。&lt;/p&gt;

&lt;h2&gt;Shell&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;bash&lt;/li&gt;
&lt;li&gt;bblean&lt;/li&gt;
&lt;li&gt;cmd&lt;/li&gt;
&lt;li&gt;powershell&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;我想我确实有命令行综合症。&lt;br/&gt;
使用Ubuntu的使用，就很喜欢在tty下操作。&lt;br/&gt;
可能有装逼的成分，但是真的，使用命令会让人感觉更准确。&lt;br/&gt;
比如说我们上线的时候，经常有备份和替换的操作。使用ftp直接连接，操作起来肯定方便，但是总是不敢下手，唯恐操作错了。但是在命令行下就不一样，如果你打错一个命令或者打错一个路径，都会出错。&lt;br/&gt;
bblean我觉得这东西还算不错。还是需要配合别的使用，比如下面介绍的TC。&lt;br/&gt;
虽然我看过其他shell的介绍，但是我自始至终都是使用bash。这东西需要学很多么。&lt;br/&gt;
至于cmd就不多说了。&lt;br/&gt;
powershell本来在曾经Win7系统下使用过，研究过几个Powershell脚本，对于支持.net framework库函数让我很是兴奋，以为能敢很多事情，但是最后还是想太多了。之后在XP下也安装了一次，但是使用都不是很多。&lt;/p&gt;

&lt;h2&gt;文件管理&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Total Commander&lt;/li&gt;
&lt;li&gt;Everything&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;初识TC没有太过在意。&lt;br/&gt;
之后看到&lt;a href=&quot;http://xbeta.info/&quot;&gt;善用佳软&lt;/a&gt;的介绍，确实是个好东西啊。&lt;br/&gt;
最后我比较坚决，直接不再使用explorer，把桌面也换成了bblean，直接使用bblean+ahk+tc，很强大的一个软件，但是我显然没有作者那么坚决的追求所有软件合法化。我使用的是盗版。在很多人眼中，是没有软件版权这么一说的。做为一个软件开发者，你可以使用盗版，但是你不能去仇视那些做软件的人使用各种加密手段去保护软件，或者在软件中增加广告的方式去得到一些收益。&lt;br/&gt;
免费使用人家软件，你就别嫌有广告。&lt;br/&gt;
对于Everything，我想说这个东西真是挺好，起码比微软的搜索好多了。（第一次打开得等一会）&lt;/p&gt;

&lt;h2&gt;远程登录&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;NetTerm&lt;/li&gt;
&lt;li&gt;SecureCRT&lt;/li&gt;
&lt;li&gt;mstsc&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;工作需要，经常telnet登录AIX服务器。&lt;br/&gt;
公司很多人都使用netterm，我偶尔使用SecureCRT。&lt;br/&gt;
至于mstsc没什么好说的。&lt;/p&gt;

&lt;h2&gt;热键&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Autohotkey&lt;/li&gt;
&lt;li&gt;xkeymacs&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;Autohotkey太强大了。&lt;br/&gt;
基本把Autohotkey当做一个解释器更为准确。哈哈。&lt;br/&gt;
至于xkeymacs，使用过一段时间，最后还是放弃了。之后曾经在ahk中增加了emacs的脚本，但是实在用的不是很多，还是删除了。&lt;br/&gt;
看来我是无法live in emacs&lt;/p&gt;

&lt;h2&gt;翻译&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;google在线翻译&lt;/li&gt;
&lt;li&gt;Lingoes&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;我曾经lingoes文件夹多达几十万个文件。最后在一次换系统时，实在闲备份太麻烦，放弃了。&lt;br/&gt;
现在也很少在离线使用使用翻译了，基本所有问题都是使用在线翻译。&lt;/p&gt;

&lt;h2&gt;即使通讯&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;QQ&lt;/li&gt;
&lt;li&gt;飞秋&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;QQ就不说了。&lt;br/&gt;
我很吃惊几乎所有的公司内部都使用飞秋或飞信。&lt;br/&gt;
说起飞秋，我发现在飞秋上弄个等级简直太有创意了。&lt;/p&gt;

&lt;h2&gt;作图&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;PS&lt;/li&gt;
&lt;li&gt;FW&lt;/li&gt;
&lt;li&gt;mspaint&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;我有点悲剧的PS从上一次换系统就没有装过。&lt;br/&gt;
倒是越来越多的使用FW了。&lt;br/&gt;
至于mspaint，我想我还是不能缺少。&lt;/p&gt;

&lt;h2&gt;云存储&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;SkyDrive&lt;/li&gt;
&lt;li&gt;Ubuntu One&lt;/li&gt;
&lt;li&gt;Dropbox&lt;/li&gt;
&lt;li&gt;百度云&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;由于使用的wp手机，最常用的肯定是SkyDrive了。&lt;br/&gt;
而使用Ubuntu One主要是他自带了，也就使用了。其实这谈不上使用。&lt;br/&gt;
Dropbox是由于别人的煽动安装的，用了几次。&lt;br/&gt;
值得一提的是百度云。刚开的时候送100G，我知道只能用一年，但是想把我一些图片备份上去，结果有点坑啊，备份了不知道多少天，只备份了不到20%。虽然现在还没有卸载，但是也快了。&lt;/p&gt;

&lt;h2&gt;IDE&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Visual Studio&lt;/li&gt;
&lt;li&gt;My Eclipse&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;VS主要使用05和10两个版本。&lt;br/&gt;
本来很喜欢vs2010的版本，但是自从在长治待了几个月，使用05感觉更好点。总感觉05比10快一点。&lt;br/&gt;
还有05下的viemu很好用。&lt;br/&gt;
至于MyEclipse，我用的不是很多。主要就是用来改几个java，生成个war包之类的。&lt;br/&gt;
有段时间在弄ruby的时候在eclipse中搭建了环境，最后用没用都忘了。&lt;/p&gt;

&lt;h2&gt;版本管理&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;svn&lt;/li&gt;
&lt;li&gt;git&lt;/li&gt;
&lt;li&gt;vss&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;用svn是因为公司使用svn。&lt;br/&gt;
我也在命令行中尝试过使用svn。说实话，我没有过多研究版本管理工具，真不知道svn和git的区别。&lt;br/&gt;
使用git主要是因为github。&lt;br/&gt;
最近在学着用github建站，使用就更多了。顺便打个广告，&lt;a href=&quot;http://nanqi.github.com/&quot;&gt;我的站点&lt;/a&gt;&lt;br/&gt;
vss是在学的使用就使用了，之后在上一家公司也一直使用的vss。&lt;br/&gt;
关于版本管理还要再说一点，我越来越推荐使用版本管理工具去管理自己重要的文件。&lt;/p&gt;

&lt;h2&gt;数据库客户端工具&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;toad&lt;/li&gt;
&lt;li&gt;plsql&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;自从开始使用oracle，我一直在换来换去的使用客户端工具。&lt;br/&gt;
之前一直都是使用plsql，但是某人说toad多么强大，多么强大。又被忽悠的使用了toad。&lt;br/&gt;
现在toad使用的很熟练，但是都是一些简单的操作，那么多功能，开发了不到十分之一，很是惭愧。&lt;/p&gt;

&lt;h2&gt;抓包&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;HttpWatch&lt;/li&gt;
&lt;li&gt;Fiddler&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;之前使用过一段时间的HttpWatch，但是后来换成Win7一直有问题，没怎么使用。&lt;br/&gt;
发现Fiddler以后，直接再就没有考虑别的抓包工具。&lt;br/&gt;
Fiddler强大的不是一般呐，居然还能打断点。&lt;/p&gt;

&lt;h2&gt;.NET 开发工具&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;Reflector&lt;/li&gt;
&lt;li&gt;LinqPad&lt;/li&gt;
&lt;li&gt;ViewStateDecoder&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;其实吧，别以为自己不使用Reflector。&lt;br/&gt;
我现在拿到一个.Net的程序，都想Ref一下。&lt;br/&gt;
LinqPad用的其实不是很多。但是提供的几个例子很是不错，还有下载的几个都很好。&lt;br/&gt;
ViewStateDecoder是一个查看ViewState的工具，当初看杨中科视频的时候弄的。之后用过几次，拿此东西分析过日报系统。&lt;/p&gt;

&lt;h2&gt;其他&lt;/h2&gt;

&lt;p&gt;&lt;em&gt;其他软件基本都是一直使用一个，没有过多的更换与尝试。&lt;/em&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;输入法——搜狗拼音（去广告的），QQ五笔（还是不怎么用）&lt;/li&gt;
&lt;li&gt;下载——迅雷（我估计迅雷一统江山了）&lt;/li&gt;
&lt;li&gt;压缩——好压（我自从使用了TC，好压基本都没什么用了）&lt;/li&gt;
&lt;li&gt;视频——射手（我也不知道我为什么用这个，但是真的绿色啊，我换了几次系统，都直接运行）&lt;/li&gt;
&lt;li&gt;在线视频——百度（本来用的皮皮，跟某人学的，后来随便就安装了百度）&lt;/li&gt;
&lt;li&gt;视频编辑——AviSynth（现在基本都没时间用了）&lt;/li&gt;
&lt;li&gt;虚拟光驱——DAEMON Tools（我要说我还装了魔方……）&lt;/li&gt;
&lt;li&gt;录屏——Wink（做教程的）&lt;/li&gt;
&lt;li&gt;PDF阅读器——福昕（很好用）&lt;/li&gt;
&lt;li&gt;照片管理——Picasa（说是照片管理，其实我就用来看看图片，没有管理）&lt;/li&gt;
&lt;li&gt;截图——QQ+HprSnap（前者有网了用着习惯，后者很强大啊，一直没删）&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>一个筛选的demo</title>
   <link href="http://nanqi.github.com/blog/2012/12/05/filter"/>
   <updated>2012-12-05T00:00:00+00:00</updated>
   <id>http://nanqi.github.com/blog/2012/12/05/filter</id>
   <content type="html">&lt;p&gt;休息在家，难得有敲代码的雅兴，随手敲个demo，给大家看看。&lt;br/&gt;
里面部分实现对于新手估计有所帮助，对于高手呢，就请大家给我指错吧。本人照单全收。&lt;/p&gt;

&lt;p&gt;demo主要实现了两个功能。&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;高级查找（FrmSift）&lt;/li&gt;
&lt;li&gt;列表筛选（UCFilter）&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;关于sift和filter两个词这里就不做争论了。&lt;br/&gt;
先看我画的demo界面：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/image/filter/main.png&quot; alt=&quot;主界面&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;高级查找&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/image/filter/sift_main.png&quot; alt=&quot;高级查找&quot; /&gt;&lt;/p&gt;

&lt;p&gt;高级查找针对于查找选项过多的情况下使用，做为一个通用的查找功能出现在软件项目中。&lt;br/&gt;
高级查找使用时基本只需传入当前的DataGridView实例，生成需要的Where条件。&lt;br/&gt;
在demo中，高级查找实现了基本的通用功能，可以在多个数据列表中使用。&lt;br/&gt;
高级查找根据所给的DataGridView生成列选项（左边的选择项），对于某些不想显示的列可以隐藏（代码中我隐藏了第一列GUID），对于特殊的情况，可以传入一个SiftItem数组。&lt;br/&gt;
数据类型现在只做了三种判断，而且判断方式让人吐血：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;switch (type.ToString())
{
    case &quot;System.Int16&quot;:
    case &quot;System.Int32&quot;:
    case &quot;System.Int64&quot;:
    case &quot;System.Single&quot;:
    case &quot;System.Double&quot;:
    case &quot;System.Decimal&quot;:
        siftType = SiftTypeEnum.Money;
        break;
    case &quot;System.DateTime&quot;:
        siftType = SiftTypeEnum.Date;
        break;
    default:
        siftType = SiftTypeEnum.Text;
        break;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;对于数字类型和日期类型，给予两个条件共同完成——&lt;code&gt;从XXX至XXX&lt;/code&gt;，所以在处理上也费了点功夫。比如说删除其中一个，另一个也要删除等情况。&lt;br/&gt;
高级查找现在只做了AND条件，没有强大的组合方式。&lt;br/&gt;
值得一提的是在处理日期类型时不能得到多数据库的支持，这里由于只是模拟数据，使用DataTable的Select去模拟查找功能，日期类型没问题。但是如果是MSSQL可能会出错，如果更甚者在数据库中使用varchar保存日期类型，这里处理就更加麻烦。（比如本人在项目中就对Oracle的此类现象进行了处理）&lt;br/&gt;
这里对于时间段做了一些功夫，其实都是有一次项目中需要，这里也就没删，保留了下来，希望对大家有用。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/image/filter/sift_datetime.png&quot; alt=&quot;时间段&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;列表选择&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/image/filter/filter.png&quot; alt=&quot;列表选择&quot; /&gt;&lt;/p&gt;

&lt;p&gt;列表选择实现的最大一个功能就是可以筛选。&lt;br/&gt;
对于筛选后的列表，不会改变已经选择的状态。&lt;br/&gt;
其实很简单，不止保存数据源，还保存了对于每个数据的选择状态。&lt;br/&gt;
在列表查找中，对于上方全选的处理实在让我费了不少功夫。&lt;br/&gt;
主要是很多方面都要我去判断全选状态。&lt;br/&gt;
ListCheckBox的ItemCheck事件和全选的CheckStateChanged事件几乎让我弄的惨不忍睹，加了减了，减了加了，如下类似的代码我调用了不知道多少次。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;this.chbxAll.CheckStateChanged -= this.chbxAll_CheckStateChanged;

//do something

this.chbxAll.CheckStateChanged += this.chbxAll_CheckStateChanged;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;好吧，写出来就是让大家指正的。&lt;/p&gt;

&lt;p&gt;最后，源码：&lt;a href=&quot;http://files.cnblogs.com/nanqi/FilterDemo.zip&quot;&gt;下载&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>bblean备忘</title>
   <link href="http://nanqi.github.com/blog/2012/11/26/bblean"/>
   <updated>2012-11-26T00:00:00+00:00</updated>
   <id>http://nanqi.github.com/blog/2012/11/26/bblean</id>
   <content type="html">&lt;p&gt;关于bblean是什么，这里就不多介绍，参见&lt;a href=&quot;http://bb4win.sourceforge.net/bblean/&quot;&gt;bblean&lt;/a&gt;&lt;/p&gt;

&lt;h2&gt;与Chrome标题栏冲突&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;在使用bblean的首先问题就是与chrome冲突。&lt;br/&gt;
主要问题是两个标题栏的问题。&lt;br/&gt;
解决方案：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;以文本文件打开安装目录下plugins/bbLeanSkin/exclusions.rc&lt;/li&gt;
&lt;li&gt;在注释：# programs which come with their own skin:列表后增加chrome.exe&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;# programs which come with their own skin:
trillian.exe
toolkit.dll
winamp.exe
Wmp.dll
chrome.exe
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;修改几个常用Win+快捷键&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;安装的bblean中自带了插件bbKeys，但是Win+E默认打开的是explorer，而常用的Win+D直接成了桌面属性。&lt;br/&gt;
我将Win+E更改为TC，而Win+D实在找不到原本的效果，只能使用Win+M（全部最小化）去代替。&lt;br/&gt;
至于使用TC，我认为既然连bblean都使用了，那么应该放弃explorer而使用TC&lt;br/&gt;
解决方案：&lt;br/&gt;
以本文本件打开安装目录下plugins/bbKeys/bbKeys.rc&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;KeyToGrab(E), WithModifier(Win), WithAction(ExecCommand), DoThis(tc)
KeyToGrab(D), WithModifier(Win), WithAction(ExecCommand), DoThis(@BBCore.MinimizeAll)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;应该都不是很难理解，KeyToGrab表示按键，而WithModifier表示功能键，至于后面的，也不必深究。&lt;br/&gt;
这里有个问题，在我的机子上，我早已经增加了tc的快捷命令，建议也这样做，对于一些有参数的很方便（比如说cygwin）。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>html备忘</title>
   <link href="http://nanqi.github.com/blog/2012/11/25/html"/>
   <updated>2012-11-25T00:00:00+00:00</updated>
   <id>http://nanqi.github.com/blog/2012/11/25/html</id>
   <content type="html">&lt;p&gt;虽然自始至终，本人工作基本都未涉及WEB领域，但是WEB越来越流行却是事实，何况自己写博客，看网页都离不开WEB。&lt;br/&gt;
我曾经也一度犹豫，做C/S开发好呢，还是做B/S开发好，但既然选择了远方，就只顾风雨兼程了，别等他人都成了牛人，我还在犹豫。&lt;br/&gt;
这里记录下我在学习和使用HTML时遇到的所有问题。&lt;/p&gt;

&lt;h2&gt;更新历史：&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;2012-11-25&lt;/em&gt; 创建文章，&lt;a href=&quot;#CenterImage&quot;&gt;如何使图片在屏幕正中间显示&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2012-11-27&lt;/em&gt; 增加&lt;a href=&quot;#Speech&quot;&gt;关于语音输入&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Style&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;几乎整个Web开发都离不开Style问题的干扰。
&lt;section id=&quot;CenterImage&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;如何使图片在屏幕正中间显示&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;这是我在做博客的404页面时碰到的问题。&lt;br/&gt;
网上随意找了个404的图片，感觉挺好，准备使用，但是随即发现，要把图片居中显示在屏幕正中间还真成了一个问题了。&lt;br/&gt;
其实很多人都发现，左右居中没问题，问题是如何上下居中。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;style type=&quot;text/css&quot;&amp;gt;
  &amp;lt;!--
    body
    {
        background-image: URL('image/404.jpg');
        background-position: center;
        background-repeat: no-repeat;
        background-attachment: fixed;
    }
  --&amp;gt;
&amp;lt;/style&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;这也正是我404页面所用的图片居中样式。&lt;/p&gt;

&lt;p&gt;&lt;section id=&quot;Speech&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;关于语音输入&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;img src=&quot;/image/speech.png&quot; alt=&quot;淘宝语音搜索&quot; /&gt;&lt;/p&gt;

&lt;p&gt;本来以为是很复杂的实现，没有太过在意。&lt;br/&gt;
后来发现在Chrome中有，但是IE中却没有，网上查了下，发现实现很简单，几乎只需要一句代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;input x-webkit-speech /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;效果如下：&lt;/p&gt;

&lt;p&gt;&lt;input x-webkit-speech /&gt;&lt;/p&gt;

&lt;p&gt;看到这段代码立刻就知道为什么在Chrome中有，但是IE中没有。是的，这只支持webkit内核浏览器。&lt;br/&gt;
关于这句代码，还有一点需要说说。&lt;br/&gt;
直接把这句代码存成html文件，然后用Chrome打开即可看到效果。&lt;br/&gt;
一个原因是html文件本来就能省略其他（当年给人演示就只放一个Button，现在有更好的），但是发现还是有很多人不知道，书本上的知识，认为一个html文件最基本的几个元素都必须得有（这个题当时我确实做过）。&lt;br/&gt;
当然，语音搜索还有几个参数可以设置，比如说限制语言种类使用&lt;code&gt;lang=&quot;zh-CN&quot;&lt;/code&gt;又如专用于搜索的参数&lt;code&gt;x-webkit-grammar=&quot;bUIltin:search&quot;&lt;/code&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>WinForm常用功能备忘</title>
   <link href="http://nanqi.github.com/blog/2012/11/22/winform"/>
   <updated>2012-11-22T00:00:00+00:00</updated>
   <id>http://nanqi.github.com/blog/2012/11/22/winform</id>
   <content type="html">&lt;h2&gt;更新历史：&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;2012-11-22&lt;/em&gt; 创建文章，&lt;a href=&quot;#DataGridView&quot;&gt;DataGridView&lt;/a&gt;，&lt;a href=&quot;#DataGridViewStyle&quot;&gt;调整单元格样式后排序...&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2012-12-10&lt;/em&gt; 增加&lt;a href=&quot;#ListView&quot;&gt;ListView&lt;/a&gt;，&lt;a href=&quot;#ListViewSort&quot;&gt;关于ListView排序的众多问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;section id=&quot;DataGridView&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;DataGridView&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;在WinForm中，DataGridView是常用列表显示控件，也是相对复杂的一个控件，对于经常做管理软件的开发者，DataGridView也是打交道最多的一个。
这里记录本人在实际开发中使用DataGridView的一些备忘。&lt;/p&gt;

&lt;p&gt;&lt;section id=&quot;DataGridViewStyle&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;调整单元格样式后排序或其他方式使控件刷新而丢失样式的问题&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;很多软件都有这么一个需求：对于异常数据或特殊数据进行高亮显示。&lt;br/&gt;
如一个超限软件，对于超限率不同的检测车辆进行不同的颜色显示；又如某设备管理软件，对于即将维保、年检的设备进行黄色提示，对于已过维保期的设备进行红色提示等等。&lt;br/&gt;
本人在做的时候，都是在绑定数据后，循环遍历一次数据，判断某列的值是否符合某种标准，否则给予标注。&lt;/p&gt;

&lt;p&gt;以前做法：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;void BindData()
{
    //BindData...

    for(int i = 0; i &amp;lt; dataGridView1.Rows.Length; i++)
    {
        if(dataGridView.Rows[i].Cells[&quot;停用标识&quot;].Value.ToString() == &quot;启用&quot;)
        {
            dataGridView.Rows[i].Cells[&quot;停用标识&quot;].Style.BackColor = Color.Red;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;但随后发现如果点击排序，都会丢失之前设置的样式。
对于这种不是很影响功能的问题，当初我都不怎么在意，或者对于不是很需要排序功能的直接禁止其排序。（这种思想是不是很不好……）&lt;/p&gt;

&lt;p&gt;但问题终归是问题，最后还是得解决。
注册CellFormatting事件，在其中进行判断。&lt;/p&gt;

&lt;p&gt;代码如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;void dataGridView1_CellFormatting(object sender, 
    DataGridViewCellFormattingEventArgs e)
{
    if(e.ColumnIndex = 7 &amp;amp;&amp;amp; e.Value.ToString() == &quot;启用&quot;)
    {
        e.CellStyle.BackColor = Color.Red;
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;section id=&quot;ListView&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;ListView&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;相较DataGridView而言，ListView在WinForm开发中比较灵活，列表可以实现，带图标的排列也没问题，而且做一些效果也是不错。ListView显然没有DataGirdView封装的那么&quot;严实&quot;，也正是因为这个问题，很多看似简单的功能在ListView中实现很难。&lt;/p&gt;

&lt;p&gt;&lt;section id=&quot;ListViewSort&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;关于ListView排序的众多问题&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;最近需要在软件中增加FTP功能，说是简单的功能，但是做起来也遇到了不少问题。主要问题就是目录浏览的问题，如何从FTP返回的列表中分割出大小、修改时间等也是当初没有想到的。而在列表展示上使用ListView控件的主要原因就是ListView控件&quot;添加&quot;数据比较自然，而DataGridView更多的是&quot;绑定&quot;数据。&lt;br/&gt;
随后发现ListView没有排序功能。&lt;br/&gt;
其实排序功能还是有的，只不过需要自己给定一个比较器。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;listView1.ListViewItemSorter = XXXComparer.Instance(XXXComparer : IComparer)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;/image/winform/ListViewSort.png&quot; alt=&quot;ListViewSort&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这就是我FTP的窗口。只显示了文件名、大小和修改时间，文件名中目录使用&lt;code&gt;[目录名]&lt;/code&gt;的方式展示，文件名的排序方式按道理上来讲应该是向上、目录、文件这种顺序。大小和修改时间就不用多说了。&lt;br/&gt;
这时候，问题就出来了：ListView的项（&lt;code&gt;SubItem&lt;/code&gt;）没有数据类型一说。&lt;br/&gt;
对此，给我ListViewSubItem增加了一个强类型的ListViewSubItem：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/// &amp;lt;summary&amp;gt;
/// 强类型ListViewSubItem
/// &amp;lt;/summary&amp;gt;
/// &amp;lt;typeparam name=&quot;T&quot;&amp;gt;&amp;lt;/typeparam&amp;gt;
public class ListViewTypeSubItem&amp;lt;T&amp;gt; : ListViewItem.ListViewSubItem
{
    public ListViewTypeSubItem()
    {
        ValueType = typeof(T);
    }

    public Type ValueType { get; set; }

    public T Value { get; set; }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当然，这个所谓的强类型还是有一定的问题。暂时这么着吧。&lt;br/&gt;
有了强类型的 ListViewSubItem 那么给ListView赋值就要有相应的修改。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;foreach (var file in files)
{
    lvi = new ListViewItem(file.IsDirectory ? string.Format(&quot;[{0}]&quot;, file.Name) : file.Name);

    size = new ListViewTypeSubItem&amp;lt;long&amp;gt;();
    size.Text = file.Size.ToString(&quot;N0&quot;);
    size.Value = file.Size;
    lvi.SubItems.Add(size);

    date = new ListViewTypeSubItem&amp;lt;DateTime&amp;gt;();
    date.Text = file.CreateTime.ToString(&quot;yyyy-MM-dd HH:mm&quot;);
    date.Value = file.CreateTime;
    lvi.SubItems.Add(date);

    lvi.Tag = file.IsDirectory ? FileTypeEnum.Directory : FileTypeEnum.File;

    lvFtpFile.Items.Add(lvi);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;当然，重要的比较器还没有写。这里列出我写的比较器，其中应该有点问题，因为当初没有想让他能点两次。也就是说没有想让他支持点一次是&lt;code&gt;asc&lt;/code&gt;，再点一次就是&lt;code&gt;desc&lt;/code&gt;。本来只是想做个排序，让大小和修改时间逆序排，而文件名就按我上面说的规则排列。最后需求有所变动。&lt;br/&gt;
说了半天，列出我的比较器：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;/// &amp;lt;summary&amp;gt;
/// ListViewItem自定义排序
/// 对long类型和DateTime类型进行处理(DESC)
/// 对于字符串,目录排在文件上面,向上排在最上边
/// &amp;lt;/summary&amp;gt;
public class ListViewItemComparer : IComparer
{
    private static int col;
    private static bool isDesc = false;

    public ListViewItemComparer(int column)
    {
        col = column;
    }

    public int Compare(object x, object y)
    {
        int result = 0;
        var sub = ((ListViewItem)x).SubItems[col];
        if (sub is ListViewTypeSubItem&amp;lt;long&amp;gt;)
        {
            var sub_x = ((ListViewItem)x).SubItems[col] as ListViewTypeSubItem&amp;lt;long&amp;gt;;
            var sub_y = ((ListViewItem)y).SubItems[col] as ListViewTypeSubItem&amp;lt;long&amp;gt;;
            if (sub_x.Value &amp;gt; sub_y.Value)
            {
                result = 1;
            }
            else if (sub_x.Value == sub_y.Value)
            {
                result = 0;
            }
            else
            {
                result = -1;
            }
        }
        else if (sub is ListViewTypeSubItem&amp;lt;DateTime&amp;gt;)
        {
            var sub_x = ((ListViewItem)x).SubItems[col] as ListViewTypeSubItem&amp;lt;DateTime&amp;gt;;
            var sub_y = ((ListViewItem)y).SubItems[col] as ListViewTypeSubItem&amp;lt;DateTime&amp;gt;;

            result = DateTime.Compare(sub_y.Value, sub_x.Value);
        }
        else
        {
            string sub_x = ((ListViewItem)x).SubItems[col].Text;
            string sub_y = ((ListViewItem)y).SubItems[col].Text;
            if ((sub_x[0] == '[' &amp;amp;&amp;amp; sub_x[sub_x.Length - 1] == ']') &amp;amp;&amp;amp;
            (sub_y[0] != '[' || sub_y[sub_y.Length - 1] != ']'))
            {
                return -1;
            }
            else
            {
                result = string.Compare(sub_x, sub_y);
            }
        }

        var lvi_x = (ListViewItem)x;
        var lvi_y = (ListViewItem)y;

        if (lvi_x.Text == &quot;[..]&quot;)
        {
            return -1;
        }

        //if (lvi_y.Text == &quot;[..]&quot;)
        //{
        //   return isDesc ? 1 : -1;
        //}

        return isDesc ? result : result == 0 ? 0 : result == 1 ? -1 : 1;
    }

    public static ListViewItemComparer Sort(int column = 0)
    {
        isDesc = !isDesc;

        return new ListViewItemComparer(column);
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;应该从代码中更能感觉到曾经改过的样子。&lt;br/&gt;
自我感觉上面的&lt;code&gt;return isDesc ? result : result == 0 ? 0 : result == 1 ? -1 : 1;&lt;/code&gt;一定会有人说。哈哈。&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>WeifenLuo的DockPanel备忘</title>
   <link href="http://nanqi.github.com/blog/2012/11/22/dockpanel"/>
   <updated>2012-11-22T00:00:00+00:00</updated>
   <id>http://nanqi.github.com/blog/2012/11/22/dockpanel</id>
   <content type="html">&lt;h2&gt;如何在双击窗体浮动时自定义其窗体属性&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;一个普遍的问题，一直以来都没有去解决，觉得无伤大雅。最后还是在同事的不断催促下才琢磨着怎么弄。说来平平无奇，只是在Form上又套了一层Form。具体步骤如下：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;注册窗体DockStateChanged事件&lt;/li&gt;
&lt;li&gt;判断this.DockState为DockState.Float&lt;/li&gt;
&lt;li&gt;获取this.Parent转换成DockPane类型&lt;/li&gt;
&lt;li&gt;属性FloatWindow即为所需窗体&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;代码如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;this.DockStateChanged += delegate
{
    if(this.DockState == WeifenLuo.WinFormsUI.Docking.DockState.Float)
    {
        DockPane dock = this.Parent as DockPane;
        Form frmFloat = dock.FloatWindow;
        frmFloat.ClientSize = new Size(800, 600);
        frmFloat.FormBorderStyle = System.Windows.Forms.FormBorderStyle.Sizable;
        frmFloat.MinimizeBox = true;
        frmFloat.MaximizeBox = true;
    }
}
&lt;/code&gt;&lt;/pre&gt;
</content>
 </entry>
 
 <entry>
   <title>关于jekyll的诸多问题</title>
   <link href="http://nanqi.github.com/blog/2012/11/16/jekyll"/>
   <updated>2012-11-16T00:00:00+00:00</updated>
   <id>http://nanqi.github.com/blog/2012/11/16/jekyll</id>
   <content type="html">&lt;h2&gt;更新历史：&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;em&gt;2012-11-20&lt;/em&gt; 创建文章，&lt;a href=&quot;#NotCN&quot;&gt;category不能为中文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2012-11-20&lt;/em&gt; &lt;a href=&quot;#FormatDate&quot;&gt;增加时间格式化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;2012-11-27&lt;/em&gt; 增加&lt;a href=&quot;#FileName&quot;&gt;文件名大小写影响&lt;/a&gt;，&lt;a href=&quot;#QNotCN&quot;&gt;解决category不能为中文问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;问题列表&lt;/h2&gt;

&lt;hr /&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#NotCN&quot;&gt;category不能为中文&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#FormatDate&quot;&gt;格式化日期&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#FileName&quot;&gt;文件名大小写影响&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#QNotCN&quot;&gt;解决category不能为中文问题&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;&lt;section id=&quot;NotCN&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;category不能为中文&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;category 不能为中文，因为每个 category 会生成一个文件夹。&lt;br/&gt;
在执行jekyll --no-auto时会报错。（也可能由于我cygwin的问题）&lt;/p&gt;

&lt;p&gt;&lt;section id=&quot;FormatDate&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;格式化日期&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;对于首页(index.md)中遍历site.posts时间输出问题：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{ { post.date | date_to_string } }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;输出一直都是英文，而在Archive页面发现&lt;code&gt;date_to_long_string&lt;/code&gt;字样，使用发现还是英文显示，将之替换为&lt;code&gt;date_to_short_string&lt;/code&gt;却发现有不只是日期，还有时间和时区；&lt;/p&gt;

&lt;p&gt;最后终于知道格式化方式：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;{ { post.date | date: &quot;%Y-%m-%d&quot; } }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;section id=&quot;FileName&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;文件名大小写影响&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;今天在做&lt;a href=&quot;/blog/2012/11/25/html/#Speech&quot;&gt;关于语音输入&lt;/a&gt;时发现图片文件大小写的问题在github中不识别。但是在本地可以。&lt;br/&gt;
也就是说，我有个一个图片/image/speech.PNG，在代码中写：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;![淘宝语音搜索](/image/speech.png)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;使用小写，在本地运行jekyll后可以正常显示，但是push到github后却无法显示。&lt;/p&gt;

&lt;p&gt;&lt;section id=&quot;QNotCN&quot;/&gt;&lt;/p&gt;

&lt;h3&gt;解决category不能为中文问题&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;上面已经说道&lt;a href=&quot;#NotCN&quot;&gt;category不能为中文&lt;/a&gt;的问题，今天发现解决方案。&lt;br/&gt;
其实一直也觉得用分类去编排url基本没有什么意义。但是不知道怎么去修改他。今天在阅读&lt;a href=&quot;https://github.com/mojombo/jekyll/wiki&quot;&gt;官方的wiki&lt;/a&gt;时发现了&lt;a href=&quot;https://github.com/mojombo/jekyll/wiki/Permalinks&quot;&gt;永久链接&lt;/a&gt;。这正如我曾经说的，很多事情，只是你不知道，不是他不能实现。&lt;br/&gt;
我的修改为：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;permalink: /blog/:year/:month/:day/:title
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;在修改了permalink后出现一个问题。这也是我一直遗留的一个问题。请参见&lt;a href=&quot;/Questions.html#CygwinCN&quot;&gt;cygwin中文乱码&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 
</feed>